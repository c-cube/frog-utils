
# OASIS_START
# DO NOT EDIT (digest: e0a65a8fa3987fbd33875de39f0da3f3)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library frog
"src/lib/frog.cmxs": use_frog
"src/lib/Event.cmx": for-pack(Frog)
"src/lib/Snapshot.cmx": for-pack(Frog)
"src/lib/Html.cmx": for-pack(Frog)
"src/lib/Misc.cmx": for-pack(Frog)
"src/lib/Problem.cmx": for-pack(Frog)
"src/lib/Prover.cmx": for-pack(Frog)
"src/lib/Res.cmx": for-pack(Frog)
<src/lib/*.ml{,i,y}>: package(containers)
<src/lib/*.ml{,i,y}>: package(csv)
<src/lib/*.ml{,i,y}>: package(olinq)
<src/lib/*.ml{,i,y}>: package(ppx_deriving.std)
<src/lib/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/lib/*.ml{,i,y}>: package(re.posix)
<src/lib/*.ml{,i,y}>: package(result)
<src/lib/*.ml{,i,y}>: package(toml)
<src/lib/*.ml{,i,y}>: package(tyxml)
<src/lib/*.ml{,i,y}>: package(uri)
<src/lib/*.ml{,i,y}>: package(uuidm)
# Library frog_server
"src/server/frog_server.cmxs": use_frog_server
"src/server/Config.cmx": for-pack(Frog_server)
"src/server/Maki_wrapper.cmx": for-pack(Frog_server)
"src/server/Signal.cmx": for-pack(Frog_server)
"src/server/Run.cmx": for-pack(Frog_server)
"src/server/TPTP.cmx": for-pack(Frog_server)
"src/server/Test_run.cmx": for-pack(Frog_server)
"src/server/Misc_unix.cmx": for-pack(Frog_server)
"src/server/Storage.cmx": for-pack(Frog_server)
"src/server/ProblemSet.cmx": for-pack(Frog_server)
"src/server/ProverSet.cmx": for-pack(Frog_server)
<src/server/*.ml{,i,y}>: package(ISO8601)
<src/server/*.ml{,i,y}>: package(cmdliner)
<src/server/*.ml{,i,y}>: package(containers)
<src/server/*.ml{,i,y}>: package(csv)
<src/server/*.ml{,i,y}>: package(junit)
<src/server/*.ml{,i,y}>: package(maki)
<src/server/*.ml{,i,y}>: package(maki.yojson)
<src/server/*.ml{,i,y}>: package(olinq)
<src/server/*.ml{,i,y}>: package(ppx_deriving.std)
<src/server/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/server/*.ml{,i,y}>: package(printbox)
<src/server/*.ml{,i,y}>: package(re.posix)
<src/server/*.ml{,i,y}>: package(result)
<src/server/*.ml{,i,y}>: package(sqlexpr)
<src/server/*.ml{,i,y}>: package(sqlexpr.ppx)
<src/server/*.ml{,i,y}>: package(threads)
<src/server/*.ml{,i,y}>: package(toml)
<src/server/*.ml{,i,y}>: package(tyxml)
<src/server/*.ml{,i,y}>: package(unix)
<src/server/*.ml{,i,y}>: package(uri)
<src/server/*.ml{,i,y}>: package(uuidm)
<src/server/*.ml{,i,y}>: use_frog
# Executable frogweb
<src/web_server/frogweb.{native,byte}>: package(ISO8601)
<src/web_server/frogweb.{native,byte}>: package(cmdliner)
<src/web_server/frogweb.{native,byte}>: package(containers)
<src/web_server/frogweb.{native,byte}>: package(csv)
<src/web_server/frogweb.{native,byte}>: package(junit)
<src/web_server/frogweb.{native,byte}>: package(maki)
<src/web_server/frogweb.{native,byte}>: package(maki.yojson)
<src/web_server/frogweb.{native,byte}>: package(olinq)
<src/web_server/frogweb.{native,byte}>: package(opium.unix)
<src/web_server/frogweb.{native,byte}>: package(ppx_deriving.std)
<src/web_server/frogweb.{native,byte}>: package(ppx_deriving_yojson)
<src/web_server/frogweb.{native,byte}>: package(printbox)
<src/web_server/frogweb.{native,byte}>: package(re.posix)
<src/web_server/frogweb.{native,byte}>: package(result)
<src/web_server/frogweb.{native,byte}>: package(sqlexpr)
<src/web_server/frogweb.{native,byte}>: package(sqlexpr.ppx)
<src/web_server/frogweb.{native,byte}>: package(threads)
<src/web_server/frogweb.{native,byte}>: package(toml)
<src/web_server/frogweb.{native,byte}>: package(tyxml)
<src/web_server/frogweb.{native,byte}>: package(unix)
<src/web_server/frogweb.{native,byte}>: package(uri)
<src/web_server/frogweb.{native,byte}>: package(uuidm)
<src/web_server/frogweb.{native,byte}>: use_frog
<src/web_server/frogweb.{native,byte}>: use_frog_server
<src/web_server/*.ml{,i,y}>: package(ISO8601)
<src/web_server/*.ml{,i,y}>: package(cmdliner)
<src/web_server/*.ml{,i,y}>: package(containers)
<src/web_server/*.ml{,i,y}>: package(csv)
<src/web_server/*.ml{,i,y}>: package(junit)
<src/web_server/*.ml{,i,y}>: package(maki)
<src/web_server/*.ml{,i,y}>: package(maki.yojson)
<src/web_server/*.ml{,i,y}>: package(olinq)
<src/web_server/*.ml{,i,y}>: package(opium.unix)
<src/web_server/*.ml{,i,y}>: package(ppx_deriving.std)
<src/web_server/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/web_server/*.ml{,i,y}>: package(printbox)
<src/web_server/*.ml{,i,y}>: package(re.posix)
<src/web_server/*.ml{,i,y}>: package(result)
<src/web_server/*.ml{,i,y}>: package(sqlexpr)
<src/web_server/*.ml{,i,y}>: package(sqlexpr.ppx)
<src/web_server/*.ml{,i,y}>: package(threads)
<src/web_server/*.ml{,i,y}>: package(toml)
<src/web_server/*.ml{,i,y}>: package(tyxml)
<src/web_server/*.ml{,i,y}>: package(unix)
<src/web_server/*.ml{,i,y}>: package(uri)
<src/web_server/*.ml{,i,y}>: package(uuidm)
<src/web_server/*.ml{,i,y}>: use_frog
<src/web_server/*.ml{,i,y}>: use_frog_server
# Executable frogdaemon
<src/main/frogdaemon.{native,byte}>: package(ISO8601)
<src/main/frogdaemon.{native,byte}>: package(cmdliner)
<src/main/frogdaemon.{native,byte}>: package(containers)
<src/main/frogdaemon.{native,byte}>: package(csv)
<src/main/frogdaemon.{native,byte}>: package(junit)
<src/main/frogdaemon.{native,byte}>: package(maki)
<src/main/frogdaemon.{native,byte}>: package(maki.yojson)
<src/main/frogdaemon.{native,byte}>: package(olinq)
<src/main/frogdaemon.{native,byte}>: package(ppx_deriving.std)
<src/main/frogdaemon.{native,byte}>: package(ppx_deriving_yojson)
<src/main/frogdaemon.{native,byte}>: package(printbox)
<src/main/frogdaemon.{native,byte}>: package(re.posix)
<src/main/frogdaemon.{native,byte}>: package(result)
<src/main/frogdaemon.{native,byte}>: package(sqlexpr)
<src/main/frogdaemon.{native,byte}>: package(sqlexpr.ppx)
<src/main/frogdaemon.{native,byte}>: package(threads)
<src/main/frogdaemon.{native,byte}>: package(toml)
<src/main/frogdaemon.{native,byte}>: package(tyxml)
<src/main/frogdaemon.{native,byte}>: package(unix)
<src/main/frogdaemon.{native,byte}>: package(uri)
<src/main/frogdaemon.{native,byte}>: package(uuidm)
<src/main/frogdaemon.{native,byte}>: use_frog
<src/main/frogdaemon.{native,byte}>: use_frog_server
# Executable frogmonitor
<src/main/frogmonitor.{native,byte}>: package(ISO8601)
<src/main/frogmonitor.{native,byte}>: package(cmdliner)
<src/main/frogmonitor.{native,byte}>: package(containers)
<src/main/frogmonitor.{native,byte}>: package(csv)
<src/main/frogmonitor.{native,byte}>: package(junit)
<src/main/frogmonitor.{native,byte}>: package(maki)
<src/main/frogmonitor.{native,byte}>: package(maki.yojson)
<src/main/frogmonitor.{native,byte}>: package(olinq)
<src/main/frogmonitor.{native,byte}>: package(ppx_deriving.std)
<src/main/frogmonitor.{native,byte}>: package(ppx_deriving_yojson)
<src/main/frogmonitor.{native,byte}>: package(printbox)
<src/main/frogmonitor.{native,byte}>: package(re.posix)
<src/main/frogmonitor.{native,byte}>: package(result)
<src/main/frogmonitor.{native,byte}>: package(sqlexpr)
<src/main/frogmonitor.{native,byte}>: package(sqlexpr.ppx)
<src/main/frogmonitor.{native,byte}>: package(threads)
<src/main/frogmonitor.{native,byte}>: package(toml)
<src/main/frogmonitor.{native,byte}>: package(tyxml)
<src/main/frogmonitor.{native,byte}>: package(unix)
<src/main/frogmonitor.{native,byte}>: package(uri)
<src/main/frogmonitor.{native,byte}>: package(uuidm)
<src/main/frogmonitor.{native,byte}>: use_frog
<src/main/frogmonitor.{native,byte}>: use_frog_server
# Executable frogtptp
<src/main/frogtptp.{native,byte}>: package(ISO8601)
<src/main/frogtptp.{native,byte}>: package(cmdliner)
<src/main/frogtptp.{native,byte}>: package(containers)
<src/main/frogtptp.{native,byte}>: package(csv)
<src/main/frogtptp.{native,byte}>: package(junit)
<src/main/frogtptp.{native,byte}>: package(maki)
<src/main/frogtptp.{native,byte}>: package(maki.yojson)
<src/main/frogtptp.{native,byte}>: package(olinq)
<src/main/frogtptp.{native,byte}>: package(ppx_deriving.std)
<src/main/frogtptp.{native,byte}>: package(ppx_deriving_yojson)
<src/main/frogtptp.{native,byte}>: package(printbox)
<src/main/frogtptp.{native,byte}>: package(re.posix)
<src/main/frogtptp.{native,byte}>: package(result)
<src/main/frogtptp.{native,byte}>: package(sqlexpr)
<src/main/frogtptp.{native,byte}>: package(sqlexpr.ppx)
<src/main/frogtptp.{native,byte}>: package(threads)
<src/main/frogtptp.{native,byte}>: package(toml)
<src/main/frogtptp.{native,byte}>: package(tyxml)
<src/main/frogtptp.{native,byte}>: package(unix)
<src/main/frogtptp.{native,byte}>: package(uri)
<src/main/frogtptp.{native,byte}>: package(uuidm)
<src/main/frogtptp.{native,byte}>: use_frog
<src/main/frogtptp.{native,byte}>: use_frog_server
# Executable frogirc
<src/irc/frogirc.{native,byte}>: package(ISO8601)
<src/irc/frogirc.{native,byte}>: package(calculon)
<src/irc/frogirc.{native,byte}>: package(cmdliner)
<src/irc/frogirc.{native,byte}>: package(containers)
<src/irc/frogirc.{native,byte}>: package(csv)
<src/irc/frogirc.{native,byte}>: package(junit)
<src/irc/frogirc.{native,byte}>: package(maki)
<src/irc/frogirc.{native,byte}>: package(maki.yojson)
<src/irc/frogirc.{native,byte}>: package(olinq)
<src/irc/frogirc.{native,byte}>: package(ppx_deriving.std)
<src/irc/frogirc.{native,byte}>: package(ppx_deriving_yojson)
<src/irc/frogirc.{native,byte}>: package(printbox)
<src/irc/frogirc.{native,byte}>: package(re.posix)
<src/irc/frogirc.{native,byte}>: package(result)
<src/irc/frogirc.{native,byte}>: package(sqlexpr)
<src/irc/frogirc.{native,byte}>: package(sqlexpr.ppx)
<src/irc/frogirc.{native,byte}>: package(threads)
<src/irc/frogirc.{native,byte}>: package(toml)
<src/irc/frogirc.{native,byte}>: package(tyxml)
<src/irc/frogirc.{native,byte}>: package(unix)
<src/irc/frogirc.{native,byte}>: package(uri)
<src/irc/frogirc.{native,byte}>: package(uuidm)
<src/irc/frogirc.{native,byte}>: use_frog
<src/irc/frogirc.{native,byte}>: use_frog_server
<src/irc/*.ml{,i,y}>: package(ISO8601)
<src/irc/*.ml{,i,y}>: package(calculon)
<src/irc/*.ml{,i,y}>: package(cmdliner)
<src/irc/*.ml{,i,y}>: package(containers)
<src/irc/*.ml{,i,y}>: package(csv)
<src/irc/*.ml{,i,y}>: package(junit)
<src/irc/*.ml{,i,y}>: package(maki)
<src/irc/*.ml{,i,y}>: package(maki.yojson)
<src/irc/*.ml{,i,y}>: package(olinq)
<src/irc/*.ml{,i,y}>: package(ppx_deriving.std)
<src/irc/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/irc/*.ml{,i,y}>: package(printbox)
<src/irc/*.ml{,i,y}>: package(re.posix)
<src/irc/*.ml{,i,y}>: package(result)
<src/irc/*.ml{,i,y}>: package(sqlexpr)
<src/irc/*.ml{,i,y}>: package(sqlexpr.ppx)
<src/irc/*.ml{,i,y}>: package(threads)
<src/irc/*.ml{,i,y}>: package(toml)
<src/irc/*.ml{,i,y}>: package(tyxml)
<src/irc/*.ml{,i,y}>: package(unix)
<src/irc/*.ml{,i,y}>: package(uri)
<src/irc/*.ml{,i,y}>: package(uuidm)
<src/irc/*.ml{,i,y}>: use_frog
<src/irc/*.ml{,i,y}>: use_frog_server
# Executable frogtest
<src/main/frogtest.{native,byte}>: package(ISO8601)
<src/main/frogtest.{native,byte}>: package(cmdliner)
<src/main/frogtest.{native,byte}>: package(containers)
<src/main/frogtest.{native,byte}>: package(csv)
<src/main/frogtest.{native,byte}>: package(junit)
<src/main/frogtest.{native,byte}>: package(maki)
<src/main/frogtest.{native,byte}>: package(maki.yojson)
<src/main/frogtest.{native,byte}>: package(olinq)
<src/main/frogtest.{native,byte}>: package(ppx_deriving.std)
<src/main/frogtest.{native,byte}>: package(ppx_deriving_yojson)
<src/main/frogtest.{native,byte}>: package(printbox)
<src/main/frogtest.{native,byte}>: package(re.posix)
<src/main/frogtest.{native,byte}>: package(result)
<src/main/frogtest.{native,byte}>: package(sqlexpr)
<src/main/frogtest.{native,byte}>: package(sqlexpr.ppx)
<src/main/frogtest.{native,byte}>: package(threads)
<src/main/frogtest.{native,byte}>: package(toml)
<src/main/frogtest.{native,byte}>: package(tyxml)
<src/main/frogtest.{native,byte}>: package(unix)
<src/main/frogtest.{native,byte}>: package(uri)
<src/main/frogtest.{native,byte}>: package(uuidm)
<src/main/frogtest.{native,byte}>: use_frog
<src/main/frogtest.{native,byte}>: use_frog_server
# Executable frogplot
<src/plot/frogplot.{native,byte}>: package(ISO8601)
<src/plot/frogplot.{native,byte}>: package(archimedes.cairo)
<src/plot/frogplot.{native,byte}>: package(cairo2)
<src/plot/frogplot.{native,byte}>: package(cmdliner)
<src/plot/frogplot.{native,byte}>: package(containers)
<src/plot/frogplot.{native,byte}>: package(csv)
<src/plot/frogplot.{native,byte}>: package(junit)
<src/plot/frogplot.{native,byte}>: package(maki)
<src/plot/frogplot.{native,byte}>: package(maki.yojson)
<src/plot/frogplot.{native,byte}>: package(olinq)
<src/plot/frogplot.{native,byte}>: package(ppx_deriving.std)
<src/plot/frogplot.{native,byte}>: package(ppx_deriving_yojson)
<src/plot/frogplot.{native,byte}>: package(printbox)
<src/plot/frogplot.{native,byte}>: package(re.posix)
<src/plot/frogplot.{native,byte}>: package(result)
<src/plot/frogplot.{native,byte}>: package(sqlexpr)
<src/plot/frogplot.{native,byte}>: package(sqlexpr.ppx)
<src/plot/frogplot.{native,byte}>: package(threads)
<src/plot/frogplot.{native,byte}>: package(toml)
<src/plot/frogplot.{native,byte}>: package(tyxml)
<src/plot/frogplot.{native,byte}>: package(unix)
<src/plot/frogplot.{native,byte}>: package(uri)
<src/plot/frogplot.{native,byte}>: package(uuidm)
<src/plot/frogplot.{native,byte}>: use_frog
<src/plot/frogplot.{native,byte}>: use_frog_server
<src/plot/*.ml{,i,y}>: package(ISO8601)
<src/plot/*.ml{,i,y}>: package(archimedes.cairo)
<src/plot/*.ml{,i,y}>: package(cairo2)
<src/plot/*.ml{,i,y}>: package(cmdliner)
<src/plot/*.ml{,i,y}>: package(containers)
<src/plot/*.ml{,i,y}>: package(csv)
<src/plot/*.ml{,i,y}>: package(junit)
<src/plot/*.ml{,i,y}>: package(maki)
<src/plot/*.ml{,i,y}>: package(maki.yojson)
<src/plot/*.ml{,i,y}>: package(olinq)
<src/plot/*.ml{,i,y}>: package(ppx_deriving.std)
<src/plot/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/plot/*.ml{,i,y}>: package(printbox)
<src/plot/*.ml{,i,y}>: package(re.posix)
<src/plot/*.ml{,i,y}>: package(result)
<src/plot/*.ml{,i,y}>: package(sqlexpr)
<src/plot/*.ml{,i,y}>: package(sqlexpr.ppx)
<src/plot/*.ml{,i,y}>: package(threads)
<src/plot/*.ml{,i,y}>: package(toml)
<src/plot/*.ml{,i,y}>: package(tyxml)
<src/plot/*.ml{,i,y}>: package(unix)
<src/plot/*.ml{,i,y}>: package(uri)
<src/plot/*.ml{,i,y}>: package(uuidm)
<src/plot/*.ml{,i,y}>: use_frog
<src/plot/*.ml{,i,y}>: use_frog_server
# Executable froglock
<src/main/froglock.{native,byte}>: package(ISO8601)
<src/main/froglock.{native,byte}>: package(cmdliner)
<src/main/froglock.{native,byte}>: package(containers)
<src/main/froglock.{native,byte}>: package(csv)
<src/main/froglock.{native,byte}>: package(junit)
<src/main/froglock.{native,byte}>: package(maki)
<src/main/froglock.{native,byte}>: package(maki.yojson)
<src/main/froglock.{native,byte}>: package(olinq)
<src/main/froglock.{native,byte}>: package(ppx_deriving.std)
<src/main/froglock.{native,byte}>: package(ppx_deriving_yojson)
<src/main/froglock.{native,byte}>: package(printbox)
<src/main/froglock.{native,byte}>: package(re.posix)
<src/main/froglock.{native,byte}>: package(result)
<src/main/froglock.{native,byte}>: package(sqlexpr)
<src/main/froglock.{native,byte}>: package(sqlexpr.ppx)
<src/main/froglock.{native,byte}>: package(threads)
<src/main/froglock.{native,byte}>: package(toml)
<src/main/froglock.{native,byte}>: package(tyxml)
<src/main/froglock.{native,byte}>: package(unix)
<src/main/froglock.{native,byte}>: package(uri)
<src/main/froglock.{native,byte}>: package(uuidm)
<src/main/froglock.{native,byte}>: use_frog
<src/main/froglock.{native,byte}>: use_frog_server
<src/main/*.ml{,i,y}>: package(ISO8601)
<src/main/*.ml{,i,y}>: package(cmdliner)
<src/main/*.ml{,i,y}>: package(containers)
<src/main/*.ml{,i,y}>: package(csv)
<src/main/*.ml{,i,y}>: package(junit)
<src/main/*.ml{,i,y}>: package(maki)
<src/main/*.ml{,i,y}>: package(maki.yojson)
<src/main/*.ml{,i,y}>: package(olinq)
<src/main/*.ml{,i,y}>: package(ppx_deriving.std)
<src/main/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/main/*.ml{,i,y}>: package(printbox)
<src/main/*.ml{,i,y}>: package(re.posix)
<src/main/*.ml{,i,y}>: package(result)
<src/main/*.ml{,i,y}>: package(sqlexpr)
<src/main/*.ml{,i,y}>: package(sqlexpr.ppx)
<src/main/*.ml{,i,y}>: package(threads)
<src/main/*.ml{,i,y}>: package(toml)
<src/main/*.ml{,i,y}>: package(tyxml)
<src/main/*.ml{,i,y}>: package(unix)
<src/main/*.ml{,i,y}>: package(uri)
<src/main/*.ml{,i,y}>: package(uuidm)
<src/main/*.ml{,i,y}>: use_frog
<src/main/*.ml{,i,y}>: use_frog_server
# Executable frogwebclient
"src/js/frogwebclient.byte": package(ISO8601)
"src/js/frogwebclient.byte": package(containers)
"src/js/frogwebclient.byte": package(csv)
"src/js/frogwebclient.byte": package(js_of_ocaml)
"src/js/frogwebclient.byte": package(js_of_ocaml.ppx)
"src/js/frogwebclient.byte": package(js_of_ocaml.tyxml)
"src/js/frogwebclient.byte": package(js_of_ocaml.weak)
"src/js/frogwebclient.byte": package(olinq)
"src/js/frogwebclient.byte": package(ppx_deriving.std)
"src/js/frogwebclient.byte": package(ppx_deriving_yojson)
"src/js/frogwebclient.byte": package(re.posix)
"src/js/frogwebclient.byte": package(react)
"src/js/frogwebclient.byte": package(reactiveData)
"src/js/frogwebclient.byte": package(result)
"src/js/frogwebclient.byte": package(toml)
"src/js/frogwebclient.byte": package(tyxml)
"src/js/frogwebclient.byte": package(uri)
"src/js/frogwebclient.byte": package(uuidm)
"src/js/frogwebclient.byte": use_frog
<src/js/*.ml{,i,y}>: package(ISO8601)
<src/js/*.ml{,i,y}>: package(containers)
<src/js/*.ml{,i,y}>: package(csv)
<src/js/*.ml{,i,y}>: package(js_of_ocaml)
<src/js/*.ml{,i,y}>: package(js_of_ocaml.ppx)
<src/js/*.ml{,i,y}>: package(js_of_ocaml.tyxml)
<src/js/*.ml{,i,y}>: package(js_of_ocaml.weak)
<src/js/*.ml{,i,y}>: package(olinq)
<src/js/*.ml{,i,y}>: package(ppx_deriving.std)
<src/js/*.ml{,i,y}>: package(ppx_deriving_yojson)
<src/js/*.ml{,i,y}>: package(re.posix)
<src/js/*.ml{,i,y}>: package(react)
<src/js/*.ml{,i,y}>: package(reactiveData)
<src/js/*.ml{,i,y}>: package(result)
<src/js/*.ml{,i,y}>: package(toml)
<src/js/*.ml{,i,y}>: package(tyxml)
<src/js/*.ml{,i,y}>: package(uri)
<src/js/*.ml{,i,y}>: package(uuidm)
<src/js/*.ml{,i,y}>: use_frog
# OASIS_STOP

true: warn(+a-4-44-29-31-48@8-32-58), color(always)
